/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.xprodswing.principal;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author htake
 */
public class Commande extends javax.swing.JFrame {

    /**
     * Creates new form Commande
     */
    public Commande() {
        initComponents();
          
        this.setTitle("Exprod gestion des Commandes");
        setLocationRelativeTo(null);
        tableUpdate();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtREFERANCE = new javax.swing.JTextField();
        txtDESIGNATION = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCommande = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPRIXUHT = new javax.swing.JTextField();
        textQTE = new java.awt.TextField();
        textDESCRIPTIF = new java.awt.TextField();
        textPRIXTHT = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Liste des commandes");

        jLabel3.setText("REF");

        jLabel4.setText("DESIGNATION");

        txtREFERANCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtREFERANCEActionPerformed(evt);
            }
        });

        txtDESIGNATION.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDESIGNATIONActionPerformed(evt);
            }
        });

        tableCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDPRODUIT", "REF", "DESIGNATION", "DESCRIPTIF", "PRIX UHT", "QTE", "PRIX THT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableCommande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCommandeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCommande);

        jPanel2.setBackground(new java.awt.Color(255, 0, 204));

        btnAdd.setText("Ajouter");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Modifier");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("supprimer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(156, 156, 156)
                .addComponent(btnDelete)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("DESCRIPTIF");

        jLabel8.setText("PRIX THT");

        jLabel9.setText("PRIX UHT");

        jLabel10.setText("QTE");

        txtPRIXUHT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPRIXUHTActionPerformed(evt);
            }
        });

        textDESCRIPTIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDESCRIPTIFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDESIGNATION, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(txtREFERANCE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(textDESCRIPTIF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(86, 86, 86)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(55, 55, 55)
                                .addComponent(txtPRIXUHT, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textPRIXTHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textQTE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtREFERANCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPRIXUHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDESIGNATION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(textQTE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(textPRIXTHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textDESCRIPTIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(48, 48, 48)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtREFERANCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtREFERANCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtREFERANCEActionPerformed

    private void txtDESIGNATIONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDESIGNATIONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDESIGNATIONActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        // Ajout fournisseur
        
       
        String REF = txtREFERANCE.getText();
        String DESIGNATION = txtDESIGNATION.getText();
        String DESCRIPTIF = textDESCRIPTIF.getText();
        String PRIXUHT = txtPRIXUHT.getText();
        String QTE = textQTE.getText();
        String PRIXTHT = textPRIXTHT.getText();
        
        
        
        
         try {
        
       
            Class.forName("com.mysql.cj.jdbc.Driver");//enregistrer le driver jdbc
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");

            pst = con.prepareStatement("INSERT INTO commandes (REF, DESIGNATION, DESCRIPTIF, PRIXUHT, QTE, PRIXTHT )Value(?,?,?,?,?,?)");

            pst.setString(1,REF);
            pst.setString(2,DESIGNATION);
            pst.setString(3,DESCRIPTIF);
            pst.setString(4,PRIXUHT);
            pst.setString(5,QTE);
            pst.setString(6,PRIXTHT);
            
            JOptionPane.showMessageDialog(this, "Donnée enregistrées");
            pst.executeUpdate();

            tableUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Fournisseur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Fournisseur.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // modification
        DefaultTableModel dtm = (DefaultTableModel)tableCommande.getModel();
        int selectedIndex = tableCommande.getSelectedRow();

        try {

        int IDPRODUIT=Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
        String REF = txtREFERANCE.getText();
        String DESIGNATION = txtDESIGNATION.getText();
        String DESCRIPTIF = textDESCRIPTIF.getText();
        String PRIXUHT = txtPRIXUHT.getText();
        String QTE = textQTE.getText();
        String PRIXTHT = textPRIXTHT.getText();
        
            

            Class.forName("com.mysql.cj.jdbc.Driver");//enregistrer le driver jdbc
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");

            pst=con.prepareStatement("Update commandes set  REF=?, DESIGNATION=?, Descriptif=?, PRIXUHT=?, QTE=?, PRIXTHT=?  where IDPRODUIT=?");
          pst.setString(1,REF);
            pst.setString(2,DESIGNATION);
            pst.setString(3,DESCRIPTIF);
            pst.setString(4,PRIXUHT);
            pst.setString(5,QTE);
            pst.setString(6,PRIXTHT);
            pst.setInt(7,IDPRODUIT);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Donnée mis a jour");

            tableUpdate();
            txtREFERANCE.setText("");
            txtDESIGNATION.setText("");
            textDESCRIPTIF.setText("");
            txtPRIXUHT.setText("");
            textQTE.setText("");
            textPRIXTHT.setText("");
           

            tableUpdate();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         DefaultTableModel dtm = (DefaultTableModel)tableCommande.getModel();
        int selectedIndex = tableCommande.getSelectedRow();
           
          
        int IDPRODUIT = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
        int dialogResult = JOptionPane.showConfirmDialog(null, "voulez-vous supprimer cette?","Attention",JOptionPane.YES_NO_OPTION);
        
        if(dialogResult == JOptionPane.YES_NO_OPTION){
            
           try {  
           Class.forName("com.mysql.cj.jdbc.Driver");//enregistrer le driver jdbc
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");  
              
              pst=con.prepareStatement("delete from commandes where IDPRODUIT=?");
            pst.setInt(1, IDPRODUIT);
            pst.executeUpdate();
         
            
          JOptionPane.showConfirmDialog(this,"Donnée supprimée,!");
                
        tableUpdate();
            
            txtREFERANCE.setText("");
            txtDESIGNATION.setText("");
            textDESCRIPTIF.setText("");
            txtPRIXUHT.setText("");
            textQTE.setText("");
            textPRIXTHT.setText("");
            
            
            
            
            
            tableUpdate();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        } 
         
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableCommandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCommandeMouseClicked
        // pour selectionner les informations d'un champ
            
            DefaultTableModel dtm = (DefaultTableModel)tableCommande.getModel();
            int selectedIndex = tableCommande.getSelectedRow();
            
            
            txtREFERANCE.setText(dtm.getValueAt(selectedIndex, 1).toString());
            txtDESIGNATION.setText(dtm.getValueAt(selectedIndex, 2).toString());
            textDESCRIPTIF.setText(dtm.getValueAt(selectedIndex, 3).toString());
            txtPRIXUHT.setText(dtm.getValueAt(selectedIndex, 4).toString()); 
             textQTE.setText(dtm.getValueAt(selectedIndex, 5).toString());
            textPRIXTHT.setText(dtm.getValueAt(selectedIndex, 6).toString());
            
            
            
          
    }//GEN-LAST:event_tableCommandeMouseClicked

    private void txtPRIXUHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPRIXUHTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPRIXUHTActionPerformed

    private void textDESCRIPTIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDESCRIPTIFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDESCRIPTIFActionPerformed
Connection con;

PreparedStatement pst ;
      private void tableUpdate() {            
        
     
            
        try {
            int cpt;
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            // enregistrer le driver JDBC
            con=DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");
            
        
            
            pst=con.prepareStatement("SELECT * FROM commandes");
            
            
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rsmd = rs.getMetaData();
            cpt =rsmd.getColumnCount();
            
            DefaultTableModel dtm = (DefaultTableModel)tableCommande.getModel();
            dtm.setRowCount(0);
            while(rs.next()){
                Vector vect = new Vector ();
                
                for (int i=1; i<= cpt; i++ ){
                    vect.add(rs.getString("IDPRODUIT"));
                     vect.add(rs.getString("REF"));
                    vect.add(rs.getString("DESIGNATION"));   
                    vect.add(rs.getString("DESCRIPTIF"));
                     vect.add(rs.getString("PRIXUHT"));
                    vect.add(rs.getString("QTE"));   
                    vect.add(rs.getString("PRIXTHT"));
              
              
                }
                
                dtm.addRow(vect);
            }
            
        
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        }
  
           
        
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Commande().setVisible(true);
            }
        });
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCommande;
    private java.awt.TextField textDESCRIPTIF;
    private java.awt.TextField textPRIXTHT;
    private java.awt.TextField textQTE;
    private javax.swing.JTextField txtDESIGNATION;
    private javax.swing.JTextField txtPRIXUHT;
    private javax.swing.JTextField txtREFERANCE;
    // End of variables declaration//GEN-END:variables
}
