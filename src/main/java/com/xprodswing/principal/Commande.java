/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.xprodswing.principal;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Najat
 */
public class Commande extends javax.swing.JFrame {

    /**
     * Creates new form Commande
     */
 
    public Commande() {
   
        initComponents();
        this.setTitle("Xprod gestion des commandes");
        setLocationRelativeTo(null);//pour centrer le cpontenu de ma fenÃªtre
        tableUpdate();
    }
    
  
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnAJOUTER = new javax.swing.JButton();
        btnMODIFIER = new javax.swing.JButton();
        btnSUPPRIMER = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNOMCOMMANDE = new javax.swing.JTextField();
        txtFRAISDEPORT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCommande = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Info Commandes"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 984, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
        );

        btnAJOUTER.setText("AJOUTER");
        btnAJOUTER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAJOUTERMouseClicked(evt);
            }
        });
        btnAJOUTER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAJOUTERActionPerformed(evt);
            }
        });

        btnMODIFIER.setText("MODIFIER");
        btnMODIFIER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMODIFIERActionPerformed(evt);
            }
        });

        btnSUPPRIMER.setText("SUPPRIMER");
        btnSUPPRIMER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUPPRIMERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnAJOUTER)
                .addGap(93, 93, 93)
                .addComponent(btnMODIFIER)
                .addGap(107, 107, 107)
                .addComponent(btnSUPPRIMER)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMODIFIER)
                    .addComponent(btnSUPPRIMER)
                    .addComponent(btnAJOUTER))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel6.setText("NOM COMMANDE");

        jLabel1.setText("FRAIS DE PORT");

        txtNOMCOMMANDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNOMCOMMANDEActionPerformed(evt);
            }
        });

        txtFRAISDEPORT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFRAISDEPORTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(55, 55, 55)
                        .addComponent(txtFRAISDEPORT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(47, 47, 47)
                        .addComponent(txtNOMCOMMANDE, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(274, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNOMCOMMANDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFRAISDEPORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMCOMMANDE", "FRAISDEPORT"
            }
        ));
        tableCommande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCommandeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCommande);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(71, 71, 71)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 810, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 129, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(856, 856, 856))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(721, 721, 721)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1341, 1341, 1341)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(418, 418, 418)
                                .addComponent(jLabel2))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(451, 451, 451)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 700, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNOMCOMMANDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNOMCOMMANDEActionPerformed
          Commande newCmd = new Commande();
        newCmd.setVisible(true);
    }//GEN-LAST:event_txtNOMCOMMANDEActionPerformed

    private void txtFRAISDEPORTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFRAISDEPORTActionPerformed
         Commande newCmd = new Commande();
        newCmd.setVisible(true);
    }//GEN-LAST:event_txtFRAISDEPORTActionPerformed

    private void btnMODIFIERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMODIFIERActionPerformed
      //Modification
        DefaultTableModel dtm =(DefaultTableModel)tableCommande.getModel();
       
            int selectedIndex = tableCommande.getSelectedRow();
        
            int idCommande = Integer.parseInt(dtm.getValueAt(selectedIndex,0).toString());
              // Je rÃ©cupÃ¨re les infos des champs de mes champs de texte
            String nomCommande = txtNOMCOMMANDE.getText();
            String fraisDePort = txtFRAISDEPORT.getText();
         
             try{
          Class.forName("com.mysql.cj.jdbc.Driver"); // Enregistrer le Driver JDBC
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root", "");
          
            pst = con.prepareStatement("update commandes set NOMCOMMANDE=?,FRAISDEPORT=? where IDCOMMANDE=?");
            pst.setString(1, nomCommande);
            pst.setString(2, fraisDePort);
            pst.setInt(3, idCommande);
          
              pst.executeUpdate();
              
                JOptionPane.showMessageDialog(this,"ca a marchÃ©");
              // Je vide le contenu des champs remplis 
              
            txtNOMCOMMANDE.setText("");
            txtFRAISDEPORT.setText("");
            tableUpdate();

            
         } catch (ClassNotFoundException ex) {
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMODIFIERActionPerformed

    private void btnAJOUTERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAJOUTERActionPerformed
        // Je rÃ©cupÃ¨re les infos des champs de mes champs de texte
        String nomCommande = txtNOMCOMMANDE.getText();
         String fraisDePort = txtFRAISDEPORT.getText();
          
         
            try {
                 Class.forName("com.mysql.cj.jdbc.Driver");//se connecter au driver
                // con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");
            

                pst = con.prepareStatement("INSERT INTO commandes (NOMCOMMANDE,FRAISDEPORT)VALUES(?,?)");

                pst.setString(1, nomCommande);
                pst.setString(2, fraisDePort);

              
                JOptionPane.showMessageDialog(this, "DonnÃ©es enregistrÃ©es");
              pst.executeUpdate();
              
         
                //Je vide le contenu des champs remplis
            txtNOMCOMMANDE.setText("");
            txtFRAISDEPORT.setText("");
             
           //actualiser la table
             tableUpdate();
                                                       
     
            } catch (ClassNotFoundException ex) {   
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_btnAJOUTERActionPerformed

    private void btnAJOUTERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAJOUTERMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAJOUTERMouseClicked

    private void tableCommandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCommandeMouseClicked
        // pour sÃ©lectionner les informations d'un champs
        DefaultTableModel dtm =(DefaultTableModel)tableCommande.getModel();
        int selectedIndex = tableCommande.getSelectedRow();

        txtNOMCOMMANDE.setText(dtm.getValueAt(selectedIndex, 1).toString());
        txtFRAISDEPORT.setText(dtm.getValueAt(selectedIndex, 2).toString());
    }//GEN-LAST:event_tableCommandeMouseClicked

    private void btnSUPPRIMERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUPPRIMERActionPerformed
        // supprimer 
        
        DefaultTableModel dtm =(DefaultTableModel)tableCommande.getModel();
            int selectedIndex = tableCommande.getSelectedRow();
         
            int idCommande = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
            int DialogResult = JOptionPane.showConfirmDialog(null, "Voulez-vous supprimer ?", "Attention", JOptionPane.YES_NO_OPTION);
            
            if(DialogResult == JOptionPane.YES_OPTION){
                
            
            try {
                 Class.forName("com.mysql.cj.jdbc.Driver");//se connecter au driver
                con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");
            

                pst = con.prepareStatement("delete from commandes where IDCOMMANDE=?");

               pst.setInt(1, idCommande);
            
              pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "DonnÃ©e supprimÃ©e");
               
                
                 //actualiser la table
             tableUpdate();
         
                //Je vide le contenu des champs remplis
            txtNOMCOMMANDE.setText("");
            txtFRAISDEPORT.setText("");
             
          
                                                       
     
            } catch (ClassNotFoundException ex) {   
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        }  
            }
    }//GEN-LAST:event_btnSUPPRIMERActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Commande().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAJOUTER;
    private javax.swing.JButton btnMODIFIER;
    private javax.swing.JButton btnSUPPRIMER;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableCommande;
    private javax.swing.JTextField txtFRAISDEPORT;
    private javax.swing.JTextField txtNOMCOMMANDE;
    // End of variables declaration//GEN-END:variables
    // End of variables declaration  
    
    //connection
    Connection con;
    PreparedStatement pst; 
    
    //Mise Ã  jour tableau
    
    private void tableUpdate(){
        int cpt;
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root", "");
        pst = con.prepareStatement("SELECT * FROM COMMANDES");// prÃ©parer la requÃªte
        ResultSet rs = pst.executeQuery(); //ExÃ©cuter la requÃªte SQL et la  mettre dans  la variable rs (ResultSet)
        
        ResultSetMetaData rsmd = rs.getMetaData();//Va chercher les donnÃ©es
        cpt = rsmd.getColumnCount();
   
         DefaultTableModel dtm = (DefaultTableModel) tableCommande.getModel();
                 
        dtm.setRowCount(0);
       
        while(rs.next()){ 
            Vector vect = new Vector();
            
            
           for(int i=1; i<= cpt; i++) {
                vect.add(rs.getString("IDCOMMANDE")); // rajouter les Ã©lÃ©ments Id dans vecteur
                vect.add(rs.getString("NOMCOMMANDE"));
                vect.add(rs.getString("FRAISDEPORT"));
               
            }
            
             dtm.addRow(vect);   
        }                 

        }catch (ClassNotFoundException ex) { 
           
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex);
        }catch (SQLException ex) { 
            Logger.getLogger(Commande.class.getName()).log(Level.SEVERE, null, ex); 
         
        }
        
    }
    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // Je rÃ©cupÃ¨re les infos des champs de mes champs de texte
      
     
        String nomCommande = txtNOMCOMMANDE.getText();
        String fraisDePort = txtFRAISDEPORT.getText();

        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");  //Enregistrer le driver JDBC dans ma classe
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root","");
           System.out.println("connection rÃ©ussie");
            pst = con.prepareStatement("INSERT INTO COMMANDE (NOMCOMMANDE,FRAISDEPORT)VALUES (?,?)");
       
           
            pst.setString(1,nomCommande);
            pst.setString(2, fraisDePort);
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "DonnÃ©es enregistrÃ©es");
            
            //Je vide le contenu des champs remplis
            txtNOMCOMMANDE.setText("");
            txtFRAISDEPORT.setText("");
           
        }catch (SQLException ex) {
            Logger.getLogger(xprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);}
        
      
         catch (ClassNotFoundException ex) {
            Logger.getLogger(xprodDesktopAdministrateur.class.getName()).log(Level.SEVERE, null, ex);
        
            
        }
}

         }
         
       
        
