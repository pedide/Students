/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xprodswing.principal;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hedib
 */
public class Commande extends javax.swing.JFrame {

    /**
     * Creates new form Commande
     */
    public Commande() {
        initComponents();
        this.setTitle("Xprod Gestion des commandes");//creer le titre
        setLocationRelativeTo(null); //centrer le contenu
        tableUpdate();//mettre Ã  jour la table
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDATECOMMANDE = new javax.swing.JTextField();
        txtFRAISPORT = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnADDCOMMANDE = new javax.swing.JButton();
        btnMODIFIERCOMMANDE = new javax.swing.JButton();
        btnDELETECOMMANDE = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCOMMANDE = new javax.swing.JTable();
        btnRETOUR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("LISTE DES COMMANDES");

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Info Commande"));

        jLabel2.setText("Date de commande :");

        jLabel4.setText("Frais de port :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDATECOMMANDE, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(txtFRAISPORT))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDATECOMMANDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFRAISPORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 153, 153));

        btnADDCOMMANDE.setText("Ajouter");
        btnADDCOMMANDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDCOMMANDEActionPerformed(evt);
            }
        });

        btnMODIFIERCOMMANDE.setText("Modifier");
        btnMODIFIERCOMMANDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMODIFIERCOMMANDEActionPerformed(evt);
            }
        });

        btnDELETECOMMANDE.setText("Supprimer");
        btnDELETECOMMANDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETECOMMANDEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btnADDCOMMANDE)
                .addGap(18, 18, 18)
                .addComponent(btnMODIFIERCOMMANDE)
                .addGap(18, 18, 18)
                .addComponent(btnDELETECOMMANDE)
                .addContainerGap(169, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnADDCOMMANDE)
                    .addComponent(btnMODIFIERCOMMANDE)
                    .addComponent(btnDELETECOMMANDE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 153, 153));

        tableCOMMANDE.setBackground(new java.awt.Color(255, 153, 153));
        tableCOMMANDE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Commande", "Date de Commande", "Frais de port"
            }
        ));
        tableCOMMANDE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCOMMANDEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCOMMANDE);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        btnRETOUR.setText("Retour");
        btnRETOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRETOURActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRETOUR)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(btnRETOUR)
                        .addGap(178, 178, 178))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnADDCOMMANDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDCOMMANDEActionPerformed
       //je recupÃ¨re les infos des champs texte saisie et on le met ds refProduit par ex
       String dateCommande = txtDATECOMMANDE.getText();
       String fraisdeportCommande = txtFRAISPORT.getText();
       
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");//enregistrer le driver ds JDBC
            // System.out.println("classe forname");
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb","root","");
            
            System.out.println("connexion rÃ©ussie");
            
            pst = con.prepareStatement("INSERT INTO commandes (DATECMD, FRAISDEPORTCMD)"
                    +"VALUES (?, ?)");//inserer les donnees ds ma bd
            
            pst.setString(1, dateCommande);
            pst.setString(2, fraisdeportCommande);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Les donnÃ©es ont Ã©tÃ© enregistrÃ©s ");
            
            //je vide le contenu des champs remplis apres saisie
            txtDATECOMMANDE.setText("");
            txtFRAISPORT.setText("");
            //j'actualise mon tableau
            tableUpdate();
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnADDCOMMANDEActionPerformed

    private void btnMODIFIERCOMMANDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMODIFIERCOMMANDEActionPerformed
        // modification
        //pour selectionner les informations d'un champ
        DefaultTableModel dtm =(DefaultTableModel)tableCOMMANDE.getModel(); //on va recuperer le resultat ds un model 
        int selectedIndex = tableCOMMANDE.getSelectedRow();
        
        try {
            int idCommande = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
            
            //je recupÃ¨re les infos des champs texte saisie et on le met ds refProduit par ex
            String dateCommande = txtDATECOMMANDE.getText();
            String fraisdeportCommande = txtFRAISPORT.getText();
  
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root", ""); 
            
            pst = con.prepareStatement("Update commandes set DATECMD=?, FRAISDEPORTCMD=? where IDCMD=?");
            
            pst.setString(1, dateCommande);
            pst.setString(2, fraisdeportCommande);
            pst.setInt(3, idCommande);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Les donnÃ©es ont Ã©tÃ© mise Ã  jour !");
            
            //je vide le contenu des champs remplis apres saisie
            txtDATECOMMANDE.setText("");
            txtFRAISPORT.setText("");
            //j'actualise mon tableau
            tableUpdate();
            
        }catch (ClassNotFoundException ex){
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnMODIFIERCOMMANDEActionPerformed

    private void btnRETOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRETOURActionPerformed
        // retourner sur la page precedente
        dispose();
    }//GEN-LAST:event_btnRETOURActionPerformed

    private void tableCOMMANDEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCOMMANDEMouseClicked
        //pour selectionner les informations d'un champ
        DefaultTableModel dtm =(DefaultTableModel)tableCOMMANDE.getModel(); //on va recuperer le resultat ds un model 
        int selectedIndex = tableCOMMANDE.getSelectedRow();

        txtDATECOMMANDE.setText(dtm.getValueAt(selectedIndex, 1).toString());
        txtFRAISPORT.setText(dtm.getValueAt(selectedIndex, 2).toString());
 
    }//GEN-LAST:event_tableCOMMANDEMouseClicked

    private void btnDELETECOMMANDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETECOMMANDEActionPerformed
        // Supprimer
        DefaultTableModel dtm =(DefaultTableModel)tableCOMMANDE.getModel(); //on va recuperer le resultat ds un model 
        int selectedIndex = tableCOMMANDE.getSelectedRow();//recuperer l'index
        int idCommande = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
        int dialogResult = JOptionPane.showConfirmDialog(null, "Voulez-vous supprimer cette donnÃ©e ?","Attention",JOptionPane.YES_NO_OPTION);
        
        
        if (dialogResult == JOptionPane.YES_OPTION){
           
            try {
                //on va se connecter a la base de donnÃ©es
                Class.forName("com.mysql.cj.jdbc.Driver"); 
                con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root", "");
                //il va aller ds la table et supprimer
                pst = con.prepareStatement("delete from commandes where IDCMD=?");
                
                //mettre a jour la table
                pst.setInt(1, idCommande);
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "DonnÃ©e supprimÃ©e !");
                
                //vider les champs selectionne
                txtDATECOMMANDE.setText("");
                txtFRAISPORT.setText("");
               
                //j'actualise mon tableau
                tableUpdate();
                        
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDELETECOMMANDEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Commande().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnADDCOMMANDE;
    private javax.swing.JButton btnDELETECOMMANDE;
    private javax.swing.JButton btnMODIFIERCOMMANDE;
    private javax.swing.JButton btnRETOUR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCOMMANDE;
    private javax.swing.JTextField txtDATECOMMANDE;
    private javax.swing.JTextField txtFRAISPORT;
    // End of variables declaration//GEN-END:variables

    //connection
    Connection con;
    PreparedStatement pst; //var qui va preparer des instructions
    
    private void tableUpdate() {
        int cpt;
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/xproddb", "root", ""); 
            pst = con.prepareStatement("SELECT * FROM commandes"); //preparation de la requete
            ResultSet rs = pst.executeQuery(); //execute la requete sql - ResultSet est memoire temporaire pour stocker rs
        
            ResultSetMetaData rsmd = rs.getMetaData();
            cpt = rsmd.getColumnCount();
            DefaultTableModel dtm =(DefaultTableModel)tableCOMMANDE.getModel(); //on va recuperer le resultat ds un model 
            dtm.setRowCount(0);
        
            while(rs.next()){
                Vector vect = new Vector(); //creer un vecteur

                for(int i=1; i<=cpt; i++){
                    vect.add(rs.getString("IDCMD"));
                    vect.add(rs.getString("DATECMD"));
                    vect.add(rs.getString("FRAISDEPORTCMD"));
                }

                dtm.addRow(vect);
            
            }
            
        }catch (ClassNotFoundException ex){
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            Logger.getLogger(XprodDesktopAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
